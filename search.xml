<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机网络考研复习：概述</title>
      <link href="/posts/dd3fb5c9.html"/>
      <url>/posts/dd3fb5c9.html</url>
      
        <content type="html"><![CDATA[<h2 id="计算机网络的定义"><a href="#计算机网络的定义" class="headerlink" title="计算机网络的定义"></a>计算机网络的定义</h2><p>计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</p><h2 id="计算机网络的组成"><a href="#计算机网络的组成" class="headerlink" title="计算机网络的组成"></a>计算机网络的组成</h2><h3 id="组成成分"><a href="#组成成分" class="headerlink" title="组成成分"></a>组成成分</h3><p>计算机网络的组成成分主要分为以下几类：</p><ol><li>硬件：<ul><li>主机：也称为端系统，是网络中的主要计算设备。</li><li>通信链路：包括双绞线、光纤等，负责连接网络中的各个设备。</li><li>交换设备：如路由器、交换机等，负责数据的转发和路径选择</li><li>通信处理机：例如网卡，负责管理和处理主机间的通信。</li></ul></li><li>软件：<ul><li>网络操作系统：管理网络资源和网络通信。</li><li>邮件收发程序：用于电子邮件的发送和接收</li><li>FTP程序：文件传输协议客户端，用于文件的上传和下载</li><li>聊天程序：用于网络中的即时通讯。</li></ul></li><li>协议：<ul><li>数据传输规范：确保网络中数据正确、高效地传输。</li><li>通信规则：网络中的“交通规则”，协调设备间的通信。</li></ul></li></ol><h3 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h3><p>计算机网络的工作方式可以分为两个主要部分：</p><ol><li>边缘部分：<ul><li>由所有连接到因特网上、供用户直接使用的主机组成。</li><li>负责进行通信（如数据、音频或视频传输）和资源共享。</li></ul></li><li>核心部分：<ul><li>由大量的网络和连接这些网络的路由器组成。</li><li>为边缘部分提供连通性和交换服务。</li></ul></li></ol><p><img src="https://image.xiemu.top/posts/dd3fb5c9/1.jpg" alt="因特网的核心部分和边缘部分"></p><h3 id="功能组成"><a href="#功能组成" class="headerlink" title="功能组成"></a>功能组成</h3><p>从功能上看，计算机网络由以下两个子网组成：</p><ol><li>通信子网：<ul><li>由传输介质、通信设备和相应的网络协议组成。</li><li>负责数据的传输、交换、控制和存储。</li></ul></li><li>资源子网<ul><li>是实现资源共享功能的设备及其软件的集合。</li><li>向网络用户提供共享其他计算机上的硬件资源、软件资源和数据资源的服务。</li></ul></li></ol><h2 id="计算机网络的功能"><a href="#计算机网络的功能" class="headerlink" title="计算机网络的功能"></a>计算机网络的功能</h2><ol><li>数据通信：实现联网计算机之间信息的传输，如文件传输、电子邮件等。</li><li>资源共享：包括软件共享、数据共享和硬件共享，提高资源利用率。</li><li>分布式处理：将复杂任务分配给网络中的其他计算机系统，提高系统利用率。</li><li>提高可靠性：各台计算机互为替代机，提高系统稳定性。</li><li>负载均衡：将工作任务均衡分配给网络中的计算机。</li></ol><h2 id="计算机网络的分类"><a href="#计算机网络的分类" class="headerlink" title="计算机网络的分类"></a>计算机网络的分类</h2><ol><li>按分布范围分类：<ul><li>广域网（WAN）：长距离通信，覆盖范围几十千米到几千千米。</li><li>城域网（MAN）：覆盖几个街区到整个城市，直径5～50km。</li><li>局域网（LAN）：覆盖几十米到几千米，计算机数量无限制。</li><li>个人区域网（PAN）：覆盖约10m，连接个人工作区的消费电子设备。</li></ul></li><li>按传输技术分类：<ul><li>广播式网络：共享通信信道，如局域网和无线、卫星通信网络。</li><li>点对点网络：通过中间结点进行接收、存储和转发，如广域网。</li></ul></li><li>按拓扑结构分类：<ul><li>总线形、星形、环形、网状网络。<br><img src="https://image.xiemu.top/posts/dd3fb5c9/2.png" alt="按照拓扑结构分类"></li></ul></li><li>按使用者分类：<ul><li>公用网（Public Network）：电信公司建造，公众可使用。</li><li>专用网（Private Network）：部门为特殊业务建造，不对外服务。</li></ul></li><li>按交换技术分类：<ul><li>电路交换网络：建立专用通路，如传统电话网络。</li><li>报文交换网络：封装成报文，存储-转发方式。</li><li>分组交换网络：数据分成较短固定长度的分组，存储-转发方式。</li></ul></li></ol><h2 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h2><ol><li>速率相关性能指标<ul><li>速率：连接在计算机网络上的主机在数字信道上传送数据位数的速率，单位是b&#x2F;s, Kb&#x2F;s, Mb&#x2F;s, Tb&#x2F;s。如果用字节表示，则是B&#x2F;s, KB&#x2F;s, MB&#x2F;s, TB&#x2F;s。1 Byte &#x3D; 8 Bit。</li><li>带宽：网络设备所支持的最高速度，单位同速率，是理想条件下的最高速率。</li><li>吞吐量：单位时间内通过某个网络的数据总量</li></ul></li></ol><p>  PS：速率就是实际网速，带宽就是理论网速，吞吐量是一个或者多个设备的综合速率，比如说1000M宽带的路由器连着三个手机，每个手机看视频的速度为10MB&#x2F;S，那么速率就是10MB&#x2F;S，带宽是宽带的1000M，路由器吞吐量是30MB&#x2F;S，即三者之和。</p><ol start="2"><li>时延相关指标<ul><li>时延：包括发送时延、传播时延、排队时延和处理时延。<ul><li>发送时延：数据从主机到信道上所用的时间，计算公式：发送的数据长度&#x2F;发送速率（分组长度&#x2F;信道宽度）。</li><li>传播时延：数据在信道上传播所花费的时间，计算公式：信道长度&#x2F;电磁波在信道上传播的速率。</li><li>排队时延：数据在路由器前等待前面数据处理的时间，无固定计算方式。</li><li>处理时延：数据在路由器中处理需求的时间，无固定计算方式。</li></ul></li><li>时延带宽积：传播时延×带宽，表示链路上有多少比特的数据，具体来说就是发送端发送的第一个比特即将到达终点时，发送端已经发出了多少比特。</li><li>往返时延RTT：从发送端发送数据开始，到发送端收到来自接收端的确认，总共经历的时延。计算公式：RTT &#x3D; 传播时延×2 + 处理时间，除此之外还包括中间节点的处理时延，排队时延，发 送时延</li><li>利用率：包括信道利用率和网络利用率，信道利用率 &#x3D; 有数据通过时间 &#x2F; (有+无数据通过时间)。</li></ul></li></ol><p>  PS：一般来说，利用率越高，延迟越大，指数上涨</p><p><img src="https://image.xiemu.top/posts/dd3fb5c9/3.png" alt="时延和利用率的关系"></p><h2 id="计算机网络分层结构"><a href="#计算机网络分层结构" class="headerlink" title="计算机网络分层结构"></a>计算机网络分层结构</h2><p>分层结构用于简化网络设计、实现、维护，并促进标准化。分层的基本原则包括每层独立功能、界面清晰、功能定义与实现方法独立、下层对上层独立性，以及促进标准化。</p><h3 id="分层原因"><a href="#分层原因" class="headerlink" title="分层原因"></a>分层原因</h3><ol><li>激活数据通信通路：建立通信连接。</li><li>识别目的主机：确保数据能够到达正确的目的地。</li><li>确认目的主机状态：检查目的主机是否开机并且网络连接正常。</li><li>文件管理程序准备：确保接收方的文件管理程序已准备好接收数据。</li><li>解决差错和意外：处理传输过程中可能出现的错误和异常情况。</li></ol><h3 id="分层模型的实体"><a href="#分层模型的实体" class="headerlink" title="分层模型的实体"></a>分层模型的实体</h3><ul><li>实体：第n层中的活动元素成为n层实体。同一层被称为对等层，同一层的实体叫做对等实体。</li></ul><h3 id="数据单元"><a href="#数据单元" class="headerlink" title="数据单元"></a>数据单元</h3><ul><li>数据部分SDU(Service Data Unit) ：为完成用户所要求的功能而应传送的数据。</li><li>控制信息部分PCI(Protocol Control Information) ：控制协议操作的信息。</li><li>共同组成PDU(Protocol Data Unit) ：对等层次之间传送的数据单位。<br><img src="https://image.xiemu.top/posts/dd3fb5c9/4.png" alt="网络各层数据单元的联系"></li></ul><h2 id="协议、接口和服务的概念"><a href="#协议、接口和服务的概念" class="headerlink" title="协议、接口和服务的概念"></a>协议、接口和服务的概念</h2><ol><li>协议：为了进行网络中的对等实体数据交换而建立的规则、标准或者规定被称为网络协议，主要是水平方向，包括数据格式（语法）、控制信息（控制）、操作顺序（同步）</li><li>接口(访问节点SAP) ：同一结点内相邻两层间交换信息的连接点，上层使用下层的服务入口</li><li>服务：下层为紧邻的上层提供的功能调用。主要是垂直方向<br>服务原语：<ul><li>请求：用户到服务提供者，请求完成某项工作</li><li>指示：服务提供者到用户，指示用户做某件事</li><li>响应：用户到服务提供者，对指示的响应</li><li>证实：服务提供者到用户，对请求的证实</li></ul></li></ol><h2 id="参考模型"><a href="#参考模型" class="headerlink" title="参考模型"></a>参考模型</h2><h3 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h3><p>OSI参考模型有7层，从下到上依次为物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。每层的功能包括：</p><ul><li>物理层：定义网络设备接口标准，电气标准，如何在物理链路上传输的更快。</li><li>数据链路层：帧的开始和结束，还有透明传输，差错校验（纠错由传输层解决）</li><li>网络层：负责选择路由最佳路径、规划IP地址（IPV4和IPV6变化智慧影响网络层）、拥塞控制。</li><li>传输层：负责端到端的通信、可靠传输、不可靠传输、流量控制、复用分用。</li><li>会话层：在数据传输中建立、管理和终止会话，包括数据的同步和对话管理，设置和维护计算机网络中两台计算机之间的通信连接。</li><li>表示层：负责数据表示、编码、压缩、加密，确保一个系统的应用层所发送的信息可以被另一个系统的应用层读取。</li><li>应用层：为特定类型的网络应用提供访问手段，直接为用户的应用程序提供服务，如HTTP、SMTP、FTP、DNS等。<br><img src="https://image.xiemu.top/posts/dd3fb5c9/5.png" alt="OSI参考模型"></li></ul><p>OSI模型中，网络层及以上，每一层都要对上一层发送的数据进行处理（加个头部），数据链路层不仅仅加头部还要加尾部，物理层什么都不加，只管发数据，所以不参与数据流封装</p><p>其中应用层，表示层，会话层为资源子网，完成数据的处理等功能，传输层起到承上启下作用，网络层，数据链路层，物理层为通信子网，是为了联网而添加的通信设备。</p><h3 id="TCP-IP参考模型"><a href="#TCP-IP参考模型" class="headerlink" title="TCP&#x2F;IP参考模型"></a>TCP&#x2F;IP参考模型</h3><p>TCP&#x2F;IP模型有4层，从下到上依次为网络接口层、网际层、传输层、应用层。每层的功能包括：</p><ul><li>网络接口层：与物理网络的接口，如Ethernet，ATM，Frame Relay。</li><li>网际层：选择合适的路由，IP协议。</li><li>传输层：进程间通信，TCP和UDP协议。</li><li>应用层：提供高层协议，如HTTP、SMTP、DNS。<br><img src="https://image.xiemu.top/posts/dd3fb5c9/6.png" alt="TCP参考模型"></li></ul><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><p>OSI参考模型的优点：</p><ol><li>标准化：OSI模型由国际标准化组织（ISO）制定，提供了一个全球统一的网络通信标准。</li><li>抽象性：OSI模型抽象地定义了网络通信的各个层次，使得设计和实现网络变得更加系统化。</li><li>清晰的层次结构：OSI模型将网络通信分为七个具体的层次，每层都有明确的功能和协议。</li></ol><p>OSI参考模型的缺点：</p><ol><li>复杂性：七层结构相对复杂，实现起来较为繁琐。</li><li>缺乏实用性：OSI模型在实际应用中并不如TCP&#x2F;IP模型广泛。</li><li>效率问题：由于层次过多，可能导致效率降低。</li></ol><p>TCP&#x2F;IP模型的优点：</p><ol><li>实用性：TCP&#x2F;IP模型是因特网的基础，具有很高的实用性和广泛的应用。</li><li>简洁性：四层结构相对简单，易于理解和实现。</li><li>灵活性：TCP&#x2F;IP模型能够适应多种网络环境和需求。</li></ol><p>TCP&#x2F;IP模型的缺点：</p><ol><li>缺乏标准化：与OSI模型相比，TCP&#x2F;IP模型在标准化方面稍显不足。</li><li>层次划分不如OSI清晰：TCP&#x2F;IP模型的层次划分不如OSI模型那样明确和严格。</li></ol><h3 id="五层模型"><a href="#五层模型" class="headerlink" title="五层模型"></a>五层模型</h3><p>五层模型是一种简化的网络体系结构，它综合了OSI模型和TCP&#x2F;IP模型的优点，同时避免了它们的一些缺点。五层模型将网络通信分为以下层次：</p><ol><li>物理层 (Physical Layer) ：<ul><li>负责在物理媒介上传输原始的比特流。</li><li>涉及电气信号、光信号等的传输方式，以及物理连接的细节，如电缆的类型和接口的规格。</li></ul></li><li>数据链路层 (Data Link Layer) ：<ul><li>确保物理层传输的比特流无误，通过帧的方式传输数据。</li><li>负责帧的组装、错误检测和纠正，以及流量控制和媒介访问控制。</li></ul></li><li>网络层 (Network Layer) ：<ul><li>负责将数据包从源主机路由和转发到目的主机。</li><li>处理数据包在整个网络中的移动，主要协议包括IP（互联网协议）、ICMP（互联网控制报文协议）、OSPF（开放最短路径优先）等。</li></ul></li><li>传输层 (Transport Layer) ：<ul><li>提供端到端（进程到进程）的数据传输服务。</li><li>确保数据的完整性和可靠性，主要通过TCP（传输控制协议）实现；同时提供无连接的不可靠传输服务，通过UDP（用户数据报协议）实现。</li><li>运输单位是TCP的报文段和UDP的用户数据报。</li></ul></li><li>应用层 (Application Layer) ：<ul><li>作为应用界面，为应用程序提供网络服务。</li><li>支持各种网络应用，如HTTP（超文本传输协议）、FTP（文件传输协议）、SMTP（简单邮件传输协议）等。<br><img src="https://image.xiemu.top/posts/dd3fb5c9/7.png" alt="五层参考模型"><br>五层模型通过减少层次数量，简化了网络体系结构的理解，同时保留了OSI模型和TCP&#x2F;IP模型的核心功能和优点。这种模型更易于教学和学习，同时在实际应用中也具有很好的指导意义。五层模型强调了每一层的功能和作用，使得网络设计和维护更加高效。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> 转载内容 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Cloudflare搭建各类AI的微信助手反向代理</title>
      <link href="/posts/cdd8f365.html"/>
      <url>/posts/cdd8f365.html</url>
      
        <content type="html"><![CDATA[<h2 id="搭建各类-AI-的微信助手反向代理"><a href="#搭建各类-AI-的微信助手反向代理" class="headerlink" title="搭建各类 AI 的微信助手反向代理"></a>搭建各类 AI 的微信助手反向代理</h2><p>only for 微信助手<br>欢迎来到微信助手 ChatGPT 反向代理项目！</p><h2 id="有三个相同功能的不同部署环境的项目："><a href="#有三个相同功能的不同部署环境的项目：" class="headerlink" title="有三个相同功能的不同部署环境的项目："></a>有三个相同功能的不同部署环境的项目：</h2><ol><li>部署到Netlify的。目前Netlify注册有难度，已经有Netlify账户的可以尝试它.请移步到<a href="https://blog.xiemu.top/posts/5c83816a.html">使用Netlify搭建各类AI的微信助手反向代理</a>；</li><li>部署到自己的服务器或者任何可以搭建NodeJs环境的服务器的，请移步到<a href="https://blog.xiemu.top/posts/126b2990.html">使用Nodejs搭建各类AI的微信助手反向代理</a>；</li><li>部署到CloudFlare的，就是本文章.目前有新的办法可以解决Gemini区域限制和域名问题，目前来看是最省钱最简单的实现方法</li></ol><h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><ol><li>你需要有一个自己的域名，因为Cloudflare的dev域名是被墙的。</li><li>你需要有一个Cloudflare账号。</li><li>在Cloudflare首页，点击“Workers和Pages”，右上角“创建应用程序”–&gt;”创建Worker”。</li><li>输入Worker的名字（随意），点击部署。</li><li>点击“编辑代码：，把<a href="https://github.com/GeekinGH/AiChatHelperCFW">AiChatHelperCFW</a>仓库中的worker.js中的代码复制粘贴到worker中。</li><li>点击右上角的“保存并部署”。部署后在“设置”–&gt;”触发器“–&gt;”路由“中的路由就是完整的项目域名，用于7.1。</li><li>解决gemini“User location is not supported for the API use”区域限制的方法.<br>首先下载_worker.js到本地，修改中的 url.hostname 地址为刚刚部署好的worker的域名，类似：xxx.xxxx.workers.dev<br>在Cloudflare首页，点击“Workers和Pages”，右上角“创建应用程序”–&gt;”Pages”–&gt;”上传资产”。<br>为项目创建名称：任意起一个你喜欢的项目名称，点击“创建项目”。<br>上传您的项目资产：拖放或从计算机中选择_worker.js，上传完毕后点击“部署站点”。<br>回到这个page项目，点击“自定义域名”，按照这个视频的4:15开始的步骤设置域名</li><li>等待一会儿，自定义域名的证书显示有效后，即可把域名填写到微信助手的代理服务器栏中。</li><li>详细的Worker搭建图文说明，请访问以下链接：<br>CSDN 中 guo_zhen_qian 的：<a href="https://blog.csdn.net/guo_zhen_qian/article/details/134957351">使用Cloudflare创建openai的反向代理</a><br>GamerNoTitle:<a href="https://bili33.top/posts/Cloudflare-Workers-Section2/">Cloudflare Workers反代实战（下）</a><br>Simon’s Blog：<a href="https://simonmy.com/posts/%E4%BD%BF%E7%94%A8netlify%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86google-palm-api.html">simonmy.com</a></li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>以下操作都是在“微信助手”ChatGPT中操作：</p><ol><li>将你的代理地址填写到“代理地址”栏。</li><li>“APIKey”中填写对应的API Key，在“模型”中按下表选择或填写。<table><thead><tr><th align="center">AI</th><th align="center">APIKey</th><th align="center">模型</th></tr></thead><tbody><tr><td align="center">ChatGPT 3.5</td><td align="center">ChatGPT 3.5 API Key</td><td align="center">选择：gpt-3.5-turbo</td></tr><tr><td align="center">ChatGPT plus</td><td align="center">ChatGPT 4 API Key</td><td align="center">选择：gpt-4</td></tr><tr><td align="center">GPT-4o</td><td align="center">GPT-4o API Key</td><td align="center">手动输入，填写：GPT-4o</td></tr><tr><td align="center">Gemini-pro 1.0</td><td align="center">Gemini 1.0 API Key</td><td align="center">手动输入，填写：Gemini-pro</td></tr><tr><td align="center">Gemini-pro 1.5</td><td align="center">Gemini 1.5 API Key</td><td align="center">手动输入，填写：gemini-1.5-pro-latest</td></tr><tr><td align="center">通义千问</td><td align="center">Qwen API Key</td><td align="center">手动输入，填写：qwen-turbo(弃用) 或 qwen-max</td></tr><tr><td align="center">Moonshot Kimi</td><td align="center">Kimi API Key</td><td align="center">手动输入，填写：moonshot-v1-8k 或 moonshot-v1-32k</td></tr><tr><td align="center">Claude3</td><td align="center">Claude3 API Key</td><td align="center">手动输入，填写：claude-3-opus-20240229</td></tr><tr><td align="center">360智脑</td><td align="center">360 API Key</td><td align="center">手动输入，填写：360gpt-pro</td></tr></tbody></table></li></ol><h2 id="特别鸣谢"><a href="#特别鸣谢" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h2><ul><li>部分代码参考了懒猫提供的Gemini.zip，<a href="https://t.me/maogroup">懒猫插件交流</a></li><li>部分代码参考了Simon’s Blog：<a href="https://simonmy.com/posts/%E4%BD%BF%E7%94%A8netlify%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86google-palm-api.html">simonmy.com</a></li></ul><h2 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h2><ul><li>有关微信助手ChatGPT相关功能使用，请查看微信助手中的详细使用说明，或者在交流群里交流。</li></ul><p>祝你在微信助手中体验愉快！</p>]]></content>
      
      
      <categories>
          
          <category> 搭建教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建教程 </tag>
            
            <tag> AiChatHelper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Nodejs搭建各类AI的微信助手反向代理</title>
      <link href="/posts/126b2990.html"/>
      <url>/posts/126b2990.html</url>
      
        <content type="html"><![CDATA[<h2 id="搭建各类-AI-的微信助手反向代理"><a href="#搭建各类-AI-的微信助手反向代理" class="headerlink" title="搭建各类 AI 的微信助手反向代理"></a>搭建各类 AI 的微信助手反向代理</h2><p>only for 微信助手<br>欢迎来到微信助手 ChatGPT 反向代理项目！</p><h2 id="有三个相同功能的不同部署环境的项目："><a href="#有三个相同功能的不同部署环境的项目：" class="headerlink" title="有三个相同功能的不同部署环境的项目："></a>有三个相同功能的不同部署环境的项目：</h2><ol><li>部署到Netlify的。目前Netlify注册有难度，已经有Netlify账户的可以尝试它.请移步到<a href="https://blog.xiemu.top/posts/5c83816a.html">使用Netlify搭建各类AI的微信助手反向代理</a>；</li><li>部署到自己的服务器或者任何可以搭建NodeJs环境的服务器的，就是本文章。</li><li>部署到CloudFlare的，目前有新的办法可以解决Gemini区域限制和域名问题，目前来看是最省钱最简单的实现方法，请移步到<a href="https://blog.xiemu.top/posts/cdd8f365.html">使用Cloudflare搭建各类AI的微信助手反向代理</a>；</li></ol><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ol><li>部署到安装了nodejs环境的服务器即可</li><li>使用 PPA 安装 NodeJS<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -</span><br><span class="line">sudo apt update -y</span><br><span class="line">sudo apt install nodejs -y</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li><li>clone并运行<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git -y</span><br><span class="line">git clone https://github.com/GeekinGH/AiChatHelperNodejs.git</span><br><span class="line">cd AiChatHelperNodejs</span><br><span class="line">npm install</span><br><span class="line">sudo apt install screen -y</span><br><span class="line">screen -S aihelper</span><br><span class="line">node index.js(或者 npm start)</span><br></pre></td></tr></table></figure>按下 Ctrl + A，然后按下 D 键来分离 screen 会话。这将使程序在后台运行。 当您想再次查看 screen 会话时，可以运行以下命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -r aihelper</span><br></pre></td></tr></table></figure><strong>每次修改文件必须重新运行才能生效：</strong><br><strong>进入对应会话，通过按下（在大多数情况下）来停止运行中的应用程序，</strong><br><strong>然后再次运行</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node index.js</span><br></pre></td></tr></table></figure></li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>以下操作都是在“微信助手”ChatGPT中操作：</p><ol><li>将你的代理地址填写到“代理地址”栏。</li><li>“APIKey”中填写对应的API Key，在“模型”中按下表选择或填写。<table><thead><tr><th align="center">AI</th><th align="center">APIKey</th><th align="center">模型</th></tr></thead><tbody><tr><td align="center">ChatGPT 3.5</td><td align="center">ChatGPT 3.5 API Key</td><td align="center">选择：gpt-3.5-turbo</td></tr><tr><td align="center">ChatGPT plus</td><td align="center">ChatGPT 4 API Key</td><td align="center">选择：gpt-4</td></tr><tr><td align="center">GPT-4o</td><td align="center">GPT-4o API Key</td><td align="center">手动输入，填写：GPT-4o</td></tr><tr><td align="center">Gemini-pro 1.0</td><td align="center">Gemini 1.0 API Key</td><td align="center">手动输入，填写：Gemini-pro</td></tr><tr><td align="center">Gemini-pro 1.5</td><td align="center">Gemini 1.5 API Key</td><td align="center">手动输入，填写：gemini-1.5-pro-latest</td></tr><tr><td align="center">通义千问</td><td align="center">Qwen API Key</td><td align="center">手动输入，填写：qwen-turbo(弃用) 或 qwen-max</td></tr><tr><td align="center">Moonshot Kimi</td><td align="center">Kimi API Key</td><td align="center">手动输入，填写：moonshot-v1-8k 或 moonshot-v1-32k</td></tr><tr><td align="center">Claude3</td><td align="center">Claude3 API Key</td><td align="center">手动输入，填写：claude-3-opus-20240229</td></tr><tr><td align="center">360智脑</td><td align="center">360 API Key</td><td align="center">手动输入，填写：360gpt-pro</td></tr></tbody></table></li></ol><h2 id="特别鸣谢"><a href="#特别鸣谢" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h2><ul><li>部分代码参考了懒猫提供的Gemini.zip，<a href="https://t.me/maogroup">懒猫插件交流</a></li><li>部分代码参考了Simon’s Blog：<a href="https://simonmy.com/posts/%E4%BD%BF%E7%94%A8netlify%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86google-palm-api.html">simonmy.com</a></li></ul><h2 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h2><ul><li>有关微信助手ChatGPT相关功能使用，请查看微信助手中的详细使用说明，或者在交流群里交流。</li></ul><p>祝你在微信助手中体验愉快！</p>]]></content>
      
      
      <categories>
          
          <category> 搭建教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建教程 </tag>
            
            <tag> AiChatHelper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Netlify搭建各类AI的微信助手反向代理</title>
      <link href="/posts/5c83816a.html"/>
      <url>/posts/5c83816a.html</url>
      
        <content type="html"><![CDATA[<h2 id="搭建各类-AI-的微信助手反向代理"><a href="#搭建各类-AI-的微信助手反向代理" class="headerlink" title="搭建各类 AI 的微信助手反向代理"></a>搭建各类 AI 的微信助手反向代理</h2><p>only for 微信助手<br>把微信助手的反代部署到Netlify，不需要用到Cloudflare即可实现多种AI模型的代理，同时没有gemini的区域限制（User location is not supported for the API use）。</p><h2 id="有三个相同功能的不同部署环境的项目："><a href="#有三个相同功能的不同部署环境的项目：" class="headerlink" title="有三个相同功能的不同部署环境的项目："></a>有三个相同功能的不同部署环境的项目：</h2><ol><li>部署到Netlify的，就是本文章。目前Netlify注册有难度，已经有Netlify账户的可以尝试它；</li><li>部署到自己的服务器或者任何可以搭建NodeJs环境的服务器的，请移步到<a href="https://blog.xiemu.top/posts/126b2990.html">使用Nodejs搭建各类AI的微信助手反向代理</a>；</li><li>部署到CloudFlare的，目前有新的办法可以解决Gemini区域限制和域名问题，目前来看是最省钱最简单的实现方法，请移步到<a href="https://blog.xiemu.top/posts/cdd8f365.html">使用Cloudflare搭建各类AI的微信助手反向代理</a>；</li></ol><h2 id="Fork仓库"><a href="#Fork仓库" class="headerlink" title="Fork仓库"></a>Fork仓库</h2><p>1.注册自己的Github账户。<br>2.访问<a href="https://github.com/GeekinGH/AiChatHelper">AiChatHelper</a>仓库，点击仓库右上角的“Fork”按钮，创建自己的分支。</p><h2 id="部署到Netlify"><a href="#部署到Netlify" class="headerlink" title="部署到Netlify"></a>部署到Netlify</h2><h3 id="注册登录"><a href="#注册登录" class="headerlink" title="注册登录"></a>注册登录</h3><h4 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h4><p>使用<strong>邮箱</strong>注册Netlify账号</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>Github授权登录的方式可能会引起身份审核；<br>邮箱注册也有可能引起身份审核，尝试换邮箱地址，比如<strong>国外的邮箱</strong>；<br>netlify.com和netlify.app的分流规则，建议设置为<strong>直连</strong>，不用魔法。<br><img src="https://image.xiemu.top/posts/5c83816a/rules_netlify.jpg" alt="这是图片" title="Magic Gardens"></p><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><p>使用注册的<strong>邮箱</strong>进行登陆。</p><h3 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h3><ol><li>在 <a href="https://app.netlify.com/">Netlify</a> 上创建一个新Site(Add new site)。</li><li>点击弹出的窗口 “Import an existing project” 。</li><li>Deploy with GitHub.</li><li>按提示授权 GitHub 到你的 Netlify。</li><li>选择你刚刚fork的项目</li><li>“Add environment variables” 创建<strong>WXID_ARRAY</strong>这个环境变量（只创建一个，别重复），values值为：微信ID1,微信ID2,微信ID3<br>  —替换为你需要授权的微信ID，不同的ID需要用英文逗号隔开,最后一个微信ID后面不要加逗号。不需要加引号；<br>  —如果你的微信ID是wxid_abcdefg,你就填写wxid_abcdefg,别删掉了’wxid_’;<br>  —如果你的微信ID是lambous就填写lambous、开头别加‘wxid’！<br>  —以此类推可以添加很多不止三个的。比如 wxid_abcdefg,lambous,yourxxx,abdcedf</li><li>Deploy AiChatHelper</li><li>等待部署完成，你将获得一个二级域名，这就是你的代理地址，记住它。（xxx.netlify.app；xxx可自定义，需要带上前缀https:&#x2F;&#x2F;）</li><li>以后在GitHub修改你的代码，Netlity会自动更新代码并重新部署。</li><li>第6步的环境变量WXID_ARRAY是在初次部署之前填写的。如果部署成功后再次修改环境变量WXID_ARRAY的值，请重新部署。<br><img src="https://image.xiemu.top/posts/5c83816a/deploySite.png" alt="这是图片" title="Magic Gardens"><br><img src="https://image.xiemu.top/posts/5c83816a/configure-builds-retry-deploy-dropdown.png" alt="这是图片" title="Magic Gardens"></li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>以下操作都是在“微信助手”ChatGPT中操作：</p><ol><li>将你的代理地址填写到“代理地址”栏。(<a href="https://xxx.netlify.app/">https://xxx.netlify.app</a>)</li><li>“APIKey”中填写对应的API Key，在“模型”中按下表选择或填写。<table><thead><tr><th align="center">AI</th><th align="center">APIKey</th><th align="center">模型</th></tr></thead><tbody><tr><td align="center">ChatGPT 3.5</td><td align="center">ChatGPT 3.5 API Key</td><td align="center">选择：gpt-3.5-turbo</td></tr><tr><td align="center">ChatGPT plus</td><td align="center">ChatGPT 4 API Key</td><td align="center">选择：gpt-4</td></tr><tr><td align="center">GPT-4o</td><td align="center">GPT-4o API Key</td><td align="center">手动输入，填写：GPT-4o</td></tr><tr><td align="center">Gemini-pro 1.0</td><td align="center">Gemini 1.0 API Key</td><td align="center">手动输入，填写：Gemini-pro</td></tr><tr><td align="center">Gemini-pro 1.5</td><td align="center">Gemini 1.5 API Key</td><td align="center">手动输入，填写：gemini-1.5-pro-latest</td></tr><tr><td align="center">通义千问</td><td align="center">Qwen API Key</td><td align="center">手动输入，填写：qwen-turbo(弃用) 或 qwen-max</td></tr><tr><td align="center">Moonshot Kimi</td><td align="center">Kimi API Key</td><td align="center">手动输入，填写：moonshot-v1-8k 或 moonshot-v1-32k</td></tr><tr><td align="center">Claude3</td><td align="center">Claude3 API Key</td><td align="center">手动输入，填写：claude-3-opus-20240229</td></tr><tr><td align="center">360智脑</td><td align="center">360 API Key</td><td align="center">手动输入，填写：360gpt-pro</td></tr></tbody></table></li></ol><h2 id="特别鸣谢"><a href="#特别鸣谢" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h2><ul><li>部分代码参考了懒猫提供的Gemini.zip，<a href="https://t.me/maogroup">懒猫插件交流</a></li><li>部分代码参考了Simon’s Blog：<a href="https://simonmy.com/posts/%E4%BD%BF%E7%94%A8netlify%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86google-palm-api.html">simonmy.com</a></li></ul><h2 id="其他事项"><a href="#其他事项" class="headerlink" title="其他事项"></a>其他事项</h2><ul><li>如果遇到任何问题，请参考<a href="https://docs.netlify.com/">Netlify文档</a>进行故障排除。</li><li>有关微信助手ChatGPT相关功能使用，请查看微信助手中的详细使用说明，或者在交流群里交流。</li></ul><p>祝你在微信助手中体验愉快！</p>]]></content>
      
      
      <categories>
          
          <category> 搭建教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建教程 </tag>
            
            <tag> AiChatHelper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Visual Studio Code常用插件推荐</title>
      <link href="/posts/e0de93dd.html"/>
      <url>/posts/e0de93dd.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
